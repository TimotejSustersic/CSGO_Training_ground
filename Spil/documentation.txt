Basic documentation of this project.
It includes a TODO list and things to figure out.

So the primary objective is to create a game:

games have 3 basic functions:

Init(): to initialize all objects,

then is the loop:

first update()
second render()

- update is functionality, so collision, movement, shooting, input, ...
- render is drawing every objct (with updated positions/values) on canvas

///////////////

Our project is in SITE. site will include, main, index, render and shader everything else we will try to sort in files to avoid chaos.

----------------------------------------------------------------------------------

we will start at render (+ init).
the examples show how to draw a GLTF map but not for specific object.
I have to figure out how to draw specific objects with GLTF and include physics on them.

there is another way to include phisycs but those nodes i think you have to create manualy and cannot be imported from blender.

after this is all set we will know how to build the whole map, we will have first person,
and collision physics. whats left is some bullet system, very simple AI (for spawn moastly).

those scene.js files are very similar to GLTF so i think its posible to apply phisics on them in a way 
that we first export our object and then give them some modifications withh AABB, ...


GLTF:

torej ce dodas se custom properties dobis tud min max ampak ne vem kako jih povezes na posamezen node

mogoc smo narobe tole gledal.
razlika zakaj ne dela je ker mamo 17 exmaple node pa camero, gltf ma pa node in eden izmed njih ma se posebno spemeenljivko za kamero in tista camera pol ne more preminjat lastnosti svojga starsa.
tak da resitev bomo naredil tako kot je ze premikanje resen. 
clasu za first person bomo dal zanko za vse objekte in ce obstaja collision je acceleration = 0 oz pogledamo ce bi se posodobljena matrika sekala z objektom.

za ostale node pa bo verjetn poseben Physics class narjen.

pri fiziki so nodi drgac sestavljeni tuki je pa gltf i ne mores kr tko rec kaj je normalTexCoordzato bom node sestavu tko da je node z temi translacijami ipd. 
pol ma pa se en object parameter kjer ma se dodatne stvari notr k jih za node rabs kokr so camera al pa speed all pa collision borders.

//////////////////////////////////////////////////
Physics, gltf, controls work

Torej stvar je taka:

mava main kjer se zgodijo tri stvari (zaenkrat)

- najprej preko GLTF naloziva gor vse render objekte ... mapo

- potem mava clas za firstperson conotroler ki nardi camera class za katerga delajo kontrole za premikanje ipd.

- nazadnje je se physics class ki gre cez vse node in za vsakega pogleda najprej ce se lahko premika. ce se lahko gre njega primerjat z vsaki drugim elementom, ki ima
defineran AABB (min, max). pol pa se par colision funkcij, nakonc zracuna kolk je prevec v objektu in najbljizjo tocko k ne bo vec v njemu in mu da translacijo.
aka collision dela za vse objekte k majo AABB v gltf filu. kar je super.

zdej morva narest vse node pa speglat ta gltf file, pa streljanje implementerat pa collision uspesneih strelov morva mal drgac implementerat in je vecina narjenga.

za kamero je ta collision mal chanlenge ker je lahko vse super ampak ce je zelo vazn kako je kamera obrnjena tak da morva kolision vezat na nek drug node k se bo kamera premikala z njem
tak da k bos delala to kamero objekt dej se eno skatlo zraven pa jo boma pol vezala na kamero v kodi al pa prek gltf bom se vidu kaj je lazi.